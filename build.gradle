plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT' apply(false)
}


subprojects {
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(21)
    java.withSourcesJar()
//    java.withJavadocJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }

        exclude ".cache"
        exclude "**/assets/theurgy/**"
        exclude "**/data/theurgy/**"
        exclude "**/data/modonomicon/modonomicon/books/**"
        exclude "**/data/modonomicon/modonomicon/multiblocks/**"
        exclude "**/data/modonomicon/recipe/**"

        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : mod_version,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name = "Jei and Patchouli Maven"
            url = 'https://maven.blamejared.com'
            content {
                includeGroup "vazkii.patchouli"
                includeGroup "mezz.jei"
            }
        }
        maven {
            name = "Fiber Config (Fabric) maven"
            url = "https://maven.modmuss50.me/"
            content {
                includeGroup "me.zeroeightsix"
            }
        }
        maven {
            name = "Curse Maven"
            url = "https://www.cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
    }

    processResources {
        def props = new HashMap<>(project.properties)
        def keys = new ArrayList<String>(props.keySet()) //to avoid concurrent modification exception

        for (String key : keys) {
            if (!(props.get(key) instanceof String) && !(props.get(key) instanceof Integer)) {
                props.remove(key)
            }
        }

        if (System.getenv('MOD_VERSION') != null) {
            props.put('mod_version', System.getenv('MOD_VERSION'))
        }

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', 'META-INF/neoforge.mods.toml', '*.mixins.json']) {
            expand props
        }
        getInputs().properties(props)
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
